name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Быстрые тесты для проверки компиляции
  quick-check:
    name: ⚡ Quick Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: 🔨 Compile project
      run: mvn clean compile test-compile
      
    - name: 🧪 Run API tests (quick)
      run: mvn test -Dtest="api.SimpleApiTest" -Dheadless=true

  # Основные тесты
  main-tests:
    name: 🧪 Main Tests
    runs-on: ubuntu-latest
    needs: quick-check
    
    strategy:
      matrix:
        test-group: [api, ui, e2e, performance, security]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: 🌐 Set up Firefox
      if: contains(fromJson('["ui", "e2e"]'), matrix.test-group)
      uses: browser-actions/setup-firefox@v1
      with:
        browser-version: latest
        
    - name: 🧪 Run ${{ matrix.test-group }} tests
      run: |
        case "${{ matrix.test-group }}" in
          "api")
            mvn test -Dtest="api.SimpleApiTest,api.CommentsApiTest,api.ImprovedApiTest,api.ImprovedQualityApiTest,api.ImprovedStableApiTest,api.JsonPlaceholderApiTest,api.WorkingApiTest,api.ExtendedApiTest,api.ReqResApiTest" -Dheadless=true
            ;;
          "ui")
            mvn test -Dtest="ui.WorkingUiTest" -Dheadless=true -DforkCount=1 -DreuseForks=false -Dbrowser=firefox
            ;;
          "e2e")
            mvn test -Dtest="e2e.WorkingE2ETest" -Dheadless=true -Dbrowser=firefox
            ;;
          "performance")
            mvn test -Dtest="performance.PerformanceTest" -Dperformance.enabled=true
            ;;
          "security")
            mvn test -Dtest="security.SecurityTest" -Dsecurity.enabled=true
            ;;
        esac
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.test-group }}
        path: |
          target/surefire-reports/
          target/allure-results/

  # Генерация отчетов
  generate-reports:
    name: 📊 Generate Reports
    runs-on: ubuntu-latest
    needs: main-tests
    if: always()
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download test results
      uses: actions/download-artifact@v4
      with:
        path: test-results
        
    - name: 📊 Generate Allure Report
      run: |
        # Install Allure
        wget -q https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.29.0/allure-commandline-2.29.0.zip -O /tmp/allure.zip
        unzip /tmp/allure.zip -d /opt/allure
        sudo ln -s /opt/allure/allure-2.29.0/bin/allure /usr/bin/allure
        sudo chmod +x /usr/bin/allure
        
        # Generate report
        allure generate test-results/*/allure-results --clean -o allure-report
        
    - name: 📤 Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        
    - name: 🚀 Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        force_orphan: true
