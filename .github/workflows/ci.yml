name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Компиляция и проверка кода
  build:
    name: 🔨 Build & Compile
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📦 Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🔨 Compile project
      run: mvn clean compile test-compile
      
    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: compiled-classes
        path: target/classes

  # Запуск тестов
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        test-type: [api, ui, e2e, datadriven]
        include:
          - test-type: api
            test-pattern: "*Api*"
          - test-type: ui  
            test-pattern: "*Ui*"
          - test-type: e2e
            test-pattern: "*E2E*"
          - test-type: datadriven
            test-pattern: "*DataDriven*"
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📦 Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🧪 Run ${{ matrix.test-type }} tests
      run: mvn test -Dtest="${{ matrix.test-pattern }}" -Dui.headless=true -Dsurefire.failIfNoSpecifiedTests=false
      
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.test-type }}
        path: |
          target/surefire-reports/
          target/allure-results/

  # Генерация Allure отчетов
  allure-report:
    name: 📊 Generate Allure Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results
        
    - name: 📊 Generate Allure Report
      uses: simple-elf/allure-report-action@master
      with:
        allure_results: test-results
        allure_history: allure-history
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history_pattern: allure-history/*
        
    - name: 📤 Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/

  # Деплой отчета на GitHub Pages
  deploy:
    name: 🚀 Deploy Report
    runs-on: ubuntu-latest
    needs: allure-report
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download Allure Report
      uses: actions/download-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        
    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report/
        destination_dir: reports

  # Уведомления
  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [test, allure-report]
    if: always()
    
    steps:
    - name: 📢 Notify on success
      if: ${{ needs.test.result == 'success' && needs.allure-report.result == 'success' }}
      run: |
        echo "✅ All tests passed successfully!"
        echo "📊 Allure report generated and deployed"
        
    - name: 📢 Notify on failure
      if: ${{ needs.test.result == 'failure' || needs.allure-report.result == 'failure' }}
      run: |
        echo "❌ Some tests failed or report generation failed"
        echo "Please check the logs for details"